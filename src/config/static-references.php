<?php

return [

    /*
     | --------------------------------------------------------------------------
     | Настройки кэширования данных справочников
     | --------------------------------------------------------------------------
     |
     | Данные справочников могут не читаться каждый раз из файлов, а загружаться
     | непосредственно из кэша. Более того - кэширование производится объектов
     | провайдеров справочников целиком, что позволяет производить их
     | инициализацию очень быстро.
     */
    'cache' => [

        /*
         | --------------------------------------------------------------------------
         | Использовать кэширование справочников
         | --------------------------------------------------------------------------
         |
         | Возможные значения: true|false
         */
        'enabled' => (bool) env('STATIC_REFERENCES_CACHE_ENABLED', true),

        /*
         | --------------------------------------------------------------------------
         | Время жизни кэша в минутах. Используйте '0' для отключения ограничения
         | жизни кэша
         | --------------------------------------------------------------------------
         |
         | Используйте '0' для отключения ограничения жизни кэша.
         |
         | Возможные значения: 0|%время_в_минутах%
         */
        'lifetime' => (int) env('STATIC_REFERENCES_CACHE_LIFETIME', 0),

        /*
         | --------------------------------------------------------------------------
         | Имя хранилища используемого кэша
         | --------------------------------------------------------------------------
         |
         | Указывайте имя одного из "cache.stores".
         |
         | Если указать 'auto', то имя используемого хранилища будет взято из конфига
         | "cache.default". В противном случае очень рекомендуется использовать
         | драйвер "redis".
         |
         | Возможные значения: auto|%cache_storage_name%
         */
        'store' => env('CACHE_DRIVER', 'auto'),

    ],

    /*
     | --------------------------------------------------------------------------
     | Классы дополнительных провайдеров справочников
     | --------------------------------------------------------------------------
     |
     | Классы обязаны реализовывать интерфейс ReferenceProviderInterface.
     */
    'providers' => [
        //
    ],

];
